#Использовать "../src"
#Использовать asserts

Перем ЮнитТест;
Перем ТокенАвторизации;
Перем МассивВременныхФайлов;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	ЮнитТест = Тестирование;	
	
	ИменаТестов = Новый Массив;
	ИменаТестов.Добавить("ТестДолжен_ПроверитьОтправкуФайлаБезСессии");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьОтправкуФайлаЧерезСессию");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьУдалениеФайла");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПолучениеИнформацииОФайле");

	Возврат ИменаТестов;
	
КонецФункции // ПолучитьСписокТестов()

Процедура ПередЗапускомТеста() Экспорт
	
	// токен апи из файла, если нет нужно создать.
	ИмяФайла = ОбъединитьПути(ТекущийСценарий().Каталог, "..", "features", "token.txt");
	ТД = Новый ТекстовыйДокумент();
	ТД.Прочитать(ИмяФайла);
	ТокенАвторизации = ТД.ПолучитьТекст();
	ТД = Неопределено;

	МассивВременныхФайлов = Новый Массив;
	
КонецПроцедуры // ПередЗапускомТеста()

Процедура ПослеЗапускаТеста() Экспорт

	УдалитьВременныеФайлы();

КонецПроцедуры // ПослеЗапускаТеста()

Процедура ТестДолжен_ПроверитьОтправкуФайлаБезСессии() Экспорт
	
	ИмяТеста = "ТестДолжен_ПроверитьОтправкуФайлаБезСессии";
	ИмяВременногоФайла = ПолучитьВременныйФайл(ИмяТеста);
	ИмяФайлаНаСервисе = "/" + ИмяТеста + "2.txt";
	
	Клиент = Новый Dropbox();
	Клиент.УстановитьТокенАвторизации(ТокенАвторизации);
	ОбъектDB = Клиент.ОтправитьФайл(ИмяВременногоФайла, ИмяФайлаНаСервисе);
	
	Утверждения.Проверить(ОбъектDB <> Неопределено И ОбъектDB.Идентификатор <> Неопределено, "Не удалось отправить файл в dropbox без сессии (объект dropbox)");

	ОбъектDB = Новый ОбъектDropbox();
	ОбъектDB.Путь = ИмяВременногоФайла;
	ОбъектDB = Клиент.ОтправитьФайл(ОбъектDB, ИмяФайлаНаСервисе);

	Утверждения.Проверить(ОбъектDB <> Неопределено И ОбъектDB.Идентификатор <> Неопределено, "Не удалось отправить файл в dropbox без сессии (путь к файлу)");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьОтправкуФайлаЧерезСессию() Экспорт
	
	ИмяТеста = "ТестДолжен_ПроверитьОтправкуФайлаЧерезСессию";
	ИмяВременногоФайла = ПолучитьВременныйФайл(ИмяТеста);
	ИмяФайлаНаСервисе = "/" + ИмяТеста + "2.txt";

	Клиент = Новый Dropbox();
	Клиент.УстановитьТокенАвторизации(ТокенАвторизации);
	ОбъектDB = Клиент.ОтправитьФайл(
		ИмяВременногоФайла, 
		ИмяФайлаНаСервисе,
		Истина); // через сессию
	
	Утверждения.Проверить(ОбъектDB.Идентификатор <> Неопределено, "Не удалось отправить файл в dropbox через сессию (объект dropbox)");

	ОбъектDB = Новый ОбъектDropbox();
	ОбъектDB.Путь = ИмяВременногоФайла; 
	ОбъектDB = Клиент.ОтправитьФайл(
		ОбъектDB, 
		ИмяФайлаНаСервисе,
		Истина); // через сессию
	
	Утверждения.Проверить(ОбъектDB.Идентификатор <> Неопределено, "Не удалось отправить файл в dropbox через сессию (путь к файлу)");

	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение	
	КонецПопытки;
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьУдалениеФайла() Экспорт

	ИмяТеста = "ТестДолжен_ПроверитьУдалениеФайла";
	ИмяВременногоФайла = ПолучитьВременныйФайл(ИмяТеста);
	ИмяФайла = СтрШаблон("ТестДолжен_ПроверитьУдалениеФайла%1.txt", Формат(ТекущаяДата(), "ДФ=ddMMyyyhhmmss"));

	Клиент = Новый Dropbox();
	Клиент.УстановитьТокенАвторизации(ТокенАвторизации);

	ОбъектDB = Клиент.ОтправитьФайл(
		ИмяВременногоФайла, 
		"/" + ИмяФайла);

	Результат = Клиент.УдалитьФайл(ОбъектDB);

	Утверждения.Проверить(Результат, "Не удалось удалить файл в dropbox (объект dropbox)");

	Если Не Результат Тогда
		Возврат;
	КонецЕсли;

	ИмяФайла = СтрШаблон(ИмяТеста + "%1.txt", Формат(ТекущаяДата(), "ДФ=ddMMyyyhhmmss"));
	ИмяФайлаНаСервисе = "/" + ИмяФайла;
	ОбъектDB = Клиент.ОтправитьФайл(
		ИмяВременногоФайла, 
		ИмяФайлаНаСервисе);

	Результат = Клиент.УдалитьФайл(ИмяФайлаНаСервисе);
	Утверждения.Проверить(Результат, "Не удалось удалить файл в dropbox (через строку путь)");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПолучениеИнформацииОФайле() Экспорт

	ИмяТеста = "ТестДолжен_ПроверитьПолучениеИнформацииОФайле";
	ИмяВременногоФайла = ПолучитьВременныйФайл(ИмяТеста);
	ИмяФайла = СтрШаблон(ИмяТеста + "%1.txt", Формат(ТекущаяДата(), "ДФ=ddMMyyyhhmmss"));

	Клиент = Новый Dropbox();
	Клиент.УстановитьТокенАвторизации(ТокенАвторизации);

	ИмяФайлаНаСервисе = "/" + ИмяФайла;

	Клиент.ОтправитьФайл(
		ИмяВременногоФайла, 
		ИмяФайлаНаСервисе);

	
	ОбъектDB = Клиент.ПолучитьОбъектDropbox(ИмяФайлаНаСервисе);
	ЭтоОбъектDB = ОбъектDB <> Неопределено;
	Утверждения.Проверить(ЭтоОбъектDB, "Не удалось получить информацию о файле в dropbox");

	Если ЭтоОбъектDB Тогда

		Утверждения.Проверить(Не ПустаяСтрока(ОбъектDB.Идентификатор), "Не удалось получить информацию о файле в dropbox");	

		Клиент.УдалитьФайл(ОбъектDB);

	КонецЕсли;


КонецПроцедуры

Функция ПолучитьВременныйФайл(ИмяТеста)

	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("txt");
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(ИмяТеста + ТекущаяДата());
	ТекстовыйДокумент.Записать(ИмяВременногоФайла, КодировкаТекста.Системная);

	МассивВременныхФайлов.Добавить(ИмяВременногоФайла);

	Возврат ИмяВременногоФайла;

КонецФункции

Процедура УдалитьВременныеФайлы()

	Для Каждого ИмяФайла Из МассивВременныхФайлов Цикл
		Попытка
			УдалитьФайлы(ИмяФайла);
		Исключение
		КонецПопытки;	
	КонецЦикла;

КонецПроцедуры